# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pr:
- master

jobs:
- job: azure_docker_integration
  timeoutInMinutes: 120

  pool:
    vmImage: 'ubuntu-latest'

  variables:
    dockerId: tbillah
    imageName: tbillah/two-step-build
    user: pnlbwh
    wd: /home

  steps:
  - script: |
      sed -i 's/RUN source/# RUN source/g' Dockerfile
      docker build -t $(imageName):latest -f Dockerfile .
      sed -i 's/# RUN source/RUN source/g' Dockerfile
      docker build -t $(imageName):runTest -f Dockerfile .   
    displayName: 'Build a docker image'
    failOnStderr: true

  - script: |
        docker run --rm -ti $(imageName):runTest "python -V"
    displayName: 'Test the cache-built docker image'
    
